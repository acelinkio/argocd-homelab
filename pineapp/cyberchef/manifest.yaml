---
kind: Namespace
apiVersion: v1
metadata:
  name: cyberchef
---
apiVersion: v1
kind: Service
metadata:
  name: cyberchef
  namespace: cyberchef
  labels:
    app.kubernetes.io/instance: cyberchef
    app.kubernetes.io/name: cyberchef
    app.kubernetes.io/service: cyberchef
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: cyberchef
    app.kubernetes.io/name: cyberchef
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cyberchef
  namespace: cyberchef
  labels:
    app.kubernetes.io/instance: cyberchef
    app.kubernetes.io/name: cyberchef
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cyberchef
      app.kubernetes.io/instance: cyberchef
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: cyberchef
        app.kubernetes.io/name: cyberchef
    spec:
      containers:
        - name: main
          env: []
          # https://github.com/gchq/CyberChef/issues/1487
          # image: ghcr.io/gchq/cyberchef:10.19.4
          image:  ghcr.io/vaskozl/cyberchef-web:10.19.4
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: cyberchef
  namespace: cyberchef
spec:
  parentRefs:
    - name: internal
      namespace: gateway
      sectionName: https
    - name: external
      namespace: gateway
      sectionName: https
  hostnames:
    - "cyberchef.bitey.life"
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: cyberchef
          port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: cyberchef-private
  namespace: cyberchef
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: cyberchef.bitey.life
      recordType: CNAME
      targets:
        - intgw.bitey.life
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: cyberchef-public
  namespace: cyberchef
  annotations:
    external-dns.custom/type: public
spec:
  endpoints:
    - dnsName: cyberchef.bitey.life
      recordType: CNAME
      targets:
        - ingress.bitey.life
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "true"
