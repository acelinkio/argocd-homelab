kind: Namespace
apiVersion: v1
metadata:
  name: knative-serving
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: knative-serving
  namespace: argocd
spec:
  destination:
    namespace: knative-serving
    server: https://kubernetes.default.svc
  project: homelab
  source:
    repoURL: https://github.com/acelinkio/empty.git
    path: .
    plugin:
      name: kustomize-inline
      env:
        - name: KUSTOMIZATION_YAML
          # $ must be escaped with by $$
          value: |
            apiVersion: kustomize.config.k8s.io/v1beta1
            kind: Kustomization
            resources:
              - https://github.com/knative/serving/releases/download/knative-v1.12.3/serving-core.yaml
            patches:
              - target:
                  kind: Namespace
                patch: |
                  $$patch: delete
                  kind: Namespace
                  metadata:
                    name: deletethis
              - target:
                  kind: ConfigMap
                  name: config-domain
                patch: |
                  $$patch: merge
                  kind: ConfigMap
                  metadata:
                    name: config-domain
                  data:
                    acelink.io: |
              - target:
                  kind: ConfigMap
                  name: config-network
                patch: |
                  $$patch: merge
                  kind: ConfigMap
                  metadata:
                    name: config-network
                  data:
                    ingress-class: gateway-api.ingress.networking.knative.dev
              - target:
                  kind: Deployment
                  name: webhook
                patch: |
                  $$patch: merge
                  kind: Deployment
                  metadata:
                    name: webhook
                  spec:
                    template:
                      spec:
                        containers:
                          - name: webhook
                            livenessProbe:
                              initialDelaySeconds: 60
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
  ignoreDifferences:
    - group: "admissionregistration.k8s.io"
      kind: MutatingWebhookConfiguration
      name: webhook.serving.knative.dev
      jsonPointers:
        - /webhooks/0/rules
    - group: "admissionregistration.k8s.io"
      kind: ValidatingWebhookConfiguration
      name: validation.webhook.serving.knative.dev
      jsonPointers:
        - /webhooks/0/rules
  info:
    - name: workaround1
      value: "https://github.com/knative/serving/issues/13449#issuecomment-1676159959"
---
## clusterrole
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-gateway-api-admin
  labels:
    networking.knative.dev/ingress-provider: net-gateway-api
    app.kubernetes.io/component: net-gateway-api
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      serving.knative.dev/controller: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-gateway-api-core
  labels:
    serving.knative.dev/controller: "true"
    networking.knative.dev/ingress-provider: net-gateway-api
    app.kubernetes.io/component: net-gateway-api
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: devel
rules:
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["httproutes", "referencegrants", "referencepolicies"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["gateways"]
    verbs: ["get", "list", "update", "patch", "watch"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-gateway
  namespace: knative-serving
  labels:
    networking.knative.dev/ingress-provider: net-gateway-api
    app.kubernetes.io/component: net-gateway-api
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: devel
data:
  visibility: |
    ExternalIP:
      class: cilium
      gateway: cilium-gateway/external-knative
      service: cilium-gateway/cilium-gateway-external-knative
    ClusterLocal:
      class: cilium
      gateway: cilium-gateway/internal-knative
      service: cilium-gateway/cilium-gateway-internal-knative
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: net-gateway-api-controller
  namespace: knative-serving
  labels:
    networking.knative.dev/ingress-provider: net-gateway-api
    app.kubernetes.io/component: net-gateway-api
    app.kubernetes.io/version: devel
    app.kubernetes.io/name: knative-serving
spec:
  replicas: 1
  selector:
    matchLabels:
      app: net-gateway-api-controller
  template:
    metadata:
      labels:
        app: net-gateway-api-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: net-gateway-api-controller
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: controller
      containers:
      - name: controller
        image: gcr.io/knative-releases/knative.dev/net-gateway-api/cmd/controller:v1.12.1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 1000m
            memory: 1000Mi
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/net-gateway-api
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault