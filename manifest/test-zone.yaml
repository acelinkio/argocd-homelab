kind: Namespace
apiVersion: v1
metadata:
  name: test-zone
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo
  namespace: test-zone
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: echo
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echo
    spec:
      containers:
        - image: ealen/echo-server
          imagePullPolicy: Always
          name: echo
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: echo
  namespace: test-zone
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: echo
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-internalnginx
  annotations:
    external-dns.custom/type: private
    external-dns.alpha.kubernetes.io/hostname: "echo.<path:stringreplacesecret#domain>"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
    - host: echo.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echo
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-cilium
  namespace: test-zone
  annotations:
    external-dns.custom/type: private
    external-dns.alpha.kubernetes.io/hostname: "cecho.<path:stringreplacesecret#domain>"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
spec:
  ingressClassName: cilium
  rules:
    - host: cecho.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echo
                port:
                  number: 80
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: echo-knative
  namespace: test-zone
spec:
  template:
    spec:
      containers:
      - image: ealen/echo-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
  namespace: test-zone
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: httpbin
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: httpbin
    spec:
      containers:
        - image: kong/httpbin
          imagePullPolicy: Always
          name: httpbin
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  namespace: test-zone
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: httpbin
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpbin-internalnginx
  annotations:
    external-dns.custom/type: private
    external-dns.alpha.kubernetes.io/hostname: "httpbin.<path:stringreplacesecret#domain>"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
    - host: httpbin.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: httpbin
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpbin-cilium
  namespace: test-zone
  annotations:
    external-dns.custom/type: private
    external-dns.alpha.kubernetes.io/hostname: "chttpbin.<path:stringreplacesecret#domain>"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
spec:
  ingressClassName: cilium
  rules:
    - host: chttpbin.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: httpbin
                port:
                  number: 80
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: httpbin-knative
  namespace: test-zone
spec:
  template:
    spec:
      containers:
      - image: kong/httpbin
        ports:
          - containerPort: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: echo
  namespace: test-zone
spec:
  parentRefs:
  - name: internal
    namespace: cilium-gateway
  hostnames:
  - "echo.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: echo
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: httpbin
  namespace: test-zone
spec:
  parentRefs:
  - name: external
    namespace: cilium-gateway
  hostnames:
  - "httpbin.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: httpbin
      port: 80
# ---
# apiVersion: gateway.networking.k8s.io/v1
# kind: HTTPRoute
# metadata:
#   name: httpbin
#   namespace: test-zone
# spec:
#   parentRefs:
#   - name: external
#   rules:
#   - backendRefs:
#     - filters:
#       - requestHeaderModifier:
#           set:
#           - name: Knative-Serving-Revision
#             value: httpbin-00001
#           - name: Knative-Serving-Namespace
#             value: default
# # added by me
#           - name: X-Set-In-BackendRefs
#             value: "true"
# # end of added by me
#         type: RequestHeaderModifier
#       kind: Service
#       name: httpbin
#       port: 80
# # added by me
#     filters:
#     - requestHeaderModifier:
#         set:
#         - name: X-Set-In-Filters
#           value: "true"
#       type: RequestHeaderModifier
# # end of added by me
#     # matches:
#     # - path:
#     #     type: PathPrefix
#     #     value: /