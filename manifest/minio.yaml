---
kind: Namespace
apiVersion: v1
metadata:
  name: minio
# minio tenants are required to be namespace isolated
# https://github.com/minio/operator/issues/2381
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tenant-config
  namespace: minio
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      data:
        config.env: |-
          export MINIO_ROOT_USER="{{ .MINIO_ROOT_USER | toString }}"
          export MINIO_ROOT_PASSWORD="{{ .MINIO_ROOT_PASSWORD | toString }}"
  data:
    - secretKey: MINIO_ROOT_USER
      remoteRef:
        key: minio.tenant
        property: root_user
    - secretKey: MINIO_ROOT_PASSWORD
      remoteRef:
        key: minio.tenant
        property: root_password
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: minio-tenant
  namespace: argocd
spec:
  destination:
    namespace: minio
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: tenant
    repoURL: https://operator.min.io
    targetRevision: 6.0.4
    helm:
      valuesObject:
        tenant:
          name: tenant
          features:
            bucketDNS: true
          certificate:
            requestAutoCert: false
          configuration:
            name: tenant-config
          configSecret:
            existingSecret: true
            accessKey: ""
            secretKey: ""
          pools:
            - servers: 1
              name: pool0
              volumesPerServer: 1
              size: 5Gi
              storageClassName: longhorn
  # should be resolved in next release
  # https://github.com/minio/operator/pull/2337
  # syncPolicy:
  #   automated:
  #     allowEmpty: true
  #     prune: true
  #     selfHeal: true
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: tenant-console
  namespace: minio
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
    - name: internal
      namespace: gateway
      sectionName: https
  hostnames:
    - "minio-console.<path:stringreplacesecret#domain>"
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: tenant-console
          port: 9090
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: tenant-console-private
  namespace: minio
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: minio-console.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: tenant
  namespace: minio
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
    - name: internal
      namespace: gateway
      sectionName: https
  hostnames:
    - "minio.<path:stringreplacesecret#domain>"
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: minio
          port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: tenant-private
  namespace: minio
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: minio.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-admin
  namespace: minio
---
apiVersion: sts.min.io/v1alpha1
kind: PolicyBinding
metadata:
  name: minio-admin-binding
  namespace: minio
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  application:
    serviceaccount: minio-admin
    namespace: minio
  policies:
    - consoleAdmin