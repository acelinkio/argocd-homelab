---
kind: Namespace
apiVersion: v1
metadata:
  name: mealie
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: mealie-configsecrets
  namespace: mealie
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: postgrespassword
      remoteRef:
        key: postgres.cluster01.mealie.owner
        property: password
    - secretKey: postgresuser
      remoteRef:
        key: postgres.cluster01.mealie.owner
        property: username
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sso
  namespace: mealie
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: client_id
      remoteRef:
        key: sso
        property: mealie_client_id
---
apiVersion: v1
kind: Service
metadata:
  name: mealie
  namespace: mealie
  labels:
    app.kubernetes.io/instance: mealie
    app.kubernetes.io/name: mealie
    app.kubernetes.io/service: mealie
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: mealie
    app.kubernetes.io/instance: mealie
    app.kubernetes.io/name: mealie
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mealie
  namespace: mealie
  labels:
    app.kubernetes.io/component: mealie
    app.kubernetes.io/instance: mealie
    app.kubernetes.io/name: mealie
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: mealie
      app.kubernetes.io/name: mealie
      app.kubernetes.io/instance: mealie
  template:
    metadata:
      labels:
        app.kubernetes.io/component: mealie
        app.kubernetes.io/instance: mealie
        app.kubernetes.io/name: mealie
    spec:
      containers:
        - env:
            - name: ALLOW_SIGNUP
              value: "false"
            - name: DB_ENGINE
              value: "postgres"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: postgresuser
                  name: mealie-configsecrets
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgrespassword
                  name: mealie-configsecrets
            - name: POSTGRES_SERVER
              value: "cluster01.postgres"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "mealie"
            - name: TZ
              value: "America/Los_Angeles"
            - name: BASE_URL
              value: "https://mealie.<path:stringreplacesecret#domain>"
            - name: OIDC_AUTH_ENABLED
              value: "True"
            - name: OIDC_CONFIGURATION_URL
              value: "https://auth.<path:stringreplacesecret#domain>/application/o/mealie/.well-known/openid-configuration"
            - name: OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: client_id
                  name: sso
            - name: OIDC_ADMIN_GROUP
              value: "mealie Admin"
            - name: OIDC_USER_GROUP
              value: "mealie User"
            - name: OIDC_PROVIDER_NAME
              value: "Authentik"
            - name: OIDC_REMEMBER_ME
              value: "true"
          image: ghcr.io/mealie-recipes/mealie:v1.10.1
          name: app
          resources:
            limits:
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 400Mi
          volumeMounts:
            - mountPath: /app/data
              name: config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: mealie-files
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mealie-files
  namespace: mealie
  labels:
    app.kubernetes.io/instance: mealie
    app.kubernetes.io/name: mealie
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "2Gi"
  storageClassName: "longhorn"
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: mealie
  namespace: mealie
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  - name: external
    namespace: gateway
    sectionName: https
  hostnames:
  - "mealie.<path:stringreplacesecret#domain>"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: mealie
      port: 9000
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: mealie
  namespace: mealie
  annotations:
    external-dns.custom/type: public
spec:
  endpoints:
    - dnsName: mealie.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - ingress.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "true"