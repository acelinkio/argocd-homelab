---
kind: Namespace
apiVersion: v1
metadata:
  name: manyfold
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: manyfold-redis
  namespace: manyfold
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: password
      remoteRef:
        key: manyfold
        property: redis_password
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: manyfold-redis
  namespace: argocd
spec:
  destination:
    namespace: manyfold
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: redis-ha
    repoURL: https://dandydeveloper.github.io/charts/
    targetRevision: 4.33.2
    helm:
      valuesObject:
        auth: true
        existingSecret: manyfold-redis
        authKey: password
        haproxy:
          enabled: true
        persistentVolume:
          enabled: true
          size: 2Gi
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: manyfold
  namespace: manyfold
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: secret_key
      remoteRef:
        key: manyfold
        property: secret_key
    - secretKey: redis_password
      remoteRef:
        key: manyfold
        property: redis_password
    - secretKey: postgrespassword
      remoteRef:
        key: postgres.cluster01.manyfold.owner
        property: password
    - secretKey: postgresuser
      remoteRef:
        key: postgres.cluster01.manyfold.owner
        property: username
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sso
  namespace: manyfold
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: client_id
      remoteRef:
        key: sso
        property: manyfold_client_id
    - secretKey: client_secret
      remoteRef:
        key: sso
        property: manyfold_client_secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manyfold
  namespace: manyfold
  labels:
    app.kubernetes.io/instance: manyfold
    app.kubernetes.io/name: manyfold
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: manyfold
      app.kubernetes.io/instance: manyfold
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: manyfold
        app.kubernetes.io/name: manyfold
    spec:
      containers:
        - env:
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  key: secret_key
                  name: manyfold
            - name: DATABASE_ADAPTER
              value: postgresql
            - name: DATABASE_HOST
              value: cluster01.postgres
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: postgresuser
                  name: manyfold
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgrespassword
                  name: manyfold
            - name: DATABASE_NAME
              value: manyfold
            - name: HELPERVAR_REDIS_USER
              value: ""
            - name: HELPERVAR_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis_password
                  name: manyfold
            - name: REDIS_URL
              value: redis://$(HELPERVAR_REDIS_USER):$(HELPERVAR_REDIS_PASSWORD)@manyfold-redis-redis-ha-haproxy:6379
            - name: MULTIUSER
              value: enabled
            - name: PORTS
              value: "3214"
            - name: TZ
              value: "America/Los_Angeles"
            - name: PUBLIC_HOSTNAME
              value: "manyfold.<path:stringreplacesecret#domain>"
            - name: HTTPS_ONLY
              value: "enabled"
            - name: OIDC_NAME
              value: "Authentik"
            - name: FORCE_OIDC
              value: "enabled"
            - name: OIDC_ISSUER
              value: "https://auth.<path:stringreplacesecret#domain>/application/o/manyfold/"
            - name: OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: client_id
                  name: sso
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: client_secret
                  name: sso
          # pending: https://github.com/bjw-s-labs/container-images/pull/425
          # image: ghcr.io/bjw-s/manyfold:0.94.0
          image: ghcr.io/manyfold3d/manyfold:0.103.0
          name: main
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /tmp
              name: tmpfs
              subPath: host-tmp
            - mountPath: /app/tmp
              name: tmpfs
              subPath: app-tmp
      volumes:
        - name: media
          nfs:
            server: nassy.pinahouse
            path: /spin0/media/3d
        - emptyDir: {}
          name: tmpfs
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: manyfold
    app.kubernetes.io/name: manyfold
  name: manyfold
  namespace: manyfold
spec:
  ports:
    - name: http
      port: 3214
      protocol: TCP
      targetPort: 3214
  selector:
    app.kubernetes.io/instance: manyfold
    app.kubernetes.io/name: manyfold
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: manyfold
  namespace: manyfold
spec:
  parentRefs:
    - name: internal
      namespace: gateway
      sectionName: https
    - name: external
      namespace: gateway
      sectionName: https
  hostnames:
    - "manyfold.<path:stringreplacesecret#domain>"
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: manyfold
          port: 3214
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: manyfold-private
  namespace: manyfold
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: manyfold.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: manyfold-public
  namespace: manyfold
  annotations:
    external-dns.custom/type: public
spec:
  endpoints:
    - dnsName: manyfold.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "true"