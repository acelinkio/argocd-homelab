kind: Namespace
apiVersion: v1
metadata:
  name: authentik
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: authentik
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
  - secretKey: bootstrap_password
    remoteRef:
      key: authentik
      property: bootstrap_password
  - secretKey: bootstrap_token
    remoteRef:
      key: authentik
      property: bootstrap_token
  - secretKey: bootstrap_email
    remoteRef:
      key: authentik
      property: bootstrap_email
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: authentik
  namespace: argocd
spec:
  destination:
    namespace: authentik
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: authentik
    repoURL: https://charts.goauthentik.io
    targetRevision: 2023.5.3
    helm:
      values: |
        authentik:
            secret_key: "<path:vaults/homelab/items/authentik#secret_key>"
            postgresql:
                password: "<path:vaults/homelab/items/authentik#postgrespassword>"
        ingress:
            enabled: true
            ingressClassName: ingress-nginx-internal
            annotations:
              external-dns.custom/type: private
              external-dns.alpha.kubernetes.io/hostname: "authentik.<path:vaults/homelab/items/stringreplacesecret#domain>"
              external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
            hosts:
                - host: authentik.<path:vaults/homelab/items/stringreplacesecret#domain>
                  paths:
                      - path: "/"
                        pathType: Prefix
        postgresql:
            enabled: true
            postgresqlPassword: "<path:vaults/homelab/items/authentik#postgrespassword>"
            persistence:
              size: 4Gi
        redis:
            enabled: true
            master:
              persistence:
                enabled: false
        envValueFrom:
          AUTHENTIK_BOOTSTRAP_PASSWORD:
            secretKeyRef:
              key: bootstrap_password
              name: authentik
          AUTHENTIK_BOOTSTRAP_TOKEN:
            secretKeyRef:
              key: bootstrap_token
              name: authentik
          AUTHENTIK_BOOTSTRAP_EMAIL:
            secretKeyRef:
              key: bootstrap_email
              name: authentik
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
