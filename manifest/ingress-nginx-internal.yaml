---
kind: Namespace
apiVersion: v1
metadata:
  name: ingress-nginx-internal
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: wildcard-production
  namespace: ingress-nginx-internal
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: tls.crt
      remoteRef:
        key: certificate.wildcard-production
        property: tls.crt
    - secretKey: tls.key
      remoteRef:
        key: certificate.wildcard-production
        property: tls.key
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx-internal
  namespace: argocd
spec:
  destination:
    namespace: ingress-nginx-internal
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: ingress-nginx
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.12.0
    helm:
      valuesObject:
        controller:
          ingressClass: ingress-nginx-internal
          ingressClassResource:
            name: ingress-nginx-internal
            controllerValue: "k8s.io/ingress-nginx-internal"
          extraArgs:
            default-ssl-certificate: ingress-nginx-internal/wildcard-production
          admissionWebhooks:
            enabled: false
          service:
            annotations:
              io.cilium/lb-ipam-ips: 192.168.1.12
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: intin
  namespace: ingress-nginx-internal
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: intin.<path:stringreplacesecret#domain>
      recordType: A
      targets:
        - 192.168.1.12
