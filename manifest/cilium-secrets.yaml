kind: Namespace
apiVersion: v1
metadata:
  name: cilium-secrets
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: wildcard-staging
#   namespace: cilium-secrets
# spec:
#   secretName: wildcard-staging
#   issuerRef:
#     name: letsencrypt-staging
#     kind: ClusterIssuer
#   commonName: '<path:stringreplacesecret#domain>'
#   dnsNames:
#   - '<path:stringreplacesecret#domain>'
#   - '*.<path:stringreplacesecret#domain>'
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: wildcard-production
#   namespace: cilium-secrets
# spec:
#   secretName: wildcard-production
#   issuerRef:
#     name: letsencrypt-production
#     kind: ClusterIssuer
#   commonName: '<path:stringreplacesecret#domain>'
#   dnsNames:
#   - '<path:stringreplacesecret#domain>'
#   - '*.<path:stringreplacesecret#domain>'
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: ReferenceGrant
metadata:
  name: allowfromns-cilium-gateway
  namespace: cilium-secrets
spec:
  from:
  - group: gateway.networking.k8s.io
    kind: Gateway
    namespace: cilium-gateway
  to:
  - group: ""
    kind: Secret
# ---
# # pending https://github.com/external-secrets/external-secrets/pull/2646
# apiVersion: external-secrets.io/v1alpha1
# kind: PushSecret
# metadata:
#   name: wildcard-production
#   namespace: certificates
# spec:
#   refreshInterval: 10s
#   secretStoreRefs:
#     - name: 1password
#       kind: ClusterSecretStore
#   selector:
#     secret:
#       name: wildcard-production
#   data:
#     - match:
#         secretKey: tls.crt
#         remoteRef:
#           remoteKey: tls.crt
#     - match:
#         secretKey: tls.key
#         remoteRef:
#           remoteKey: tls.key