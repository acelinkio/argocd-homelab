kind: Namespace
apiVersion: v1
metadata:
  name: kube-system
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: gatewaycrds
#   namespace: argocd
# spec:
#   destination:
#     namespace: kube-system
#     server: https://kubernetes.default.svc
#   project: homelab
#   source:
#     repoURL: https://github.com/acelinkio/empty.git
#     path: .
#     plugin:
#       name: kustomize-inline
#       env:
#         - name: KUSTOMIZATION_YAML
#           value: |
#             apiVersion: kustomize.config.k8s.io/v1beta1
#             kind: Kustomization
#             resources:
#               - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/standard/gateway.networking.k8s.io_gatewayclasses.yaml
#               - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/standard/gateway.networking.k8s.io_gateways.yaml
#               - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/standard/gateway.networking.k8s.io_httproutes.yaml
#               - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/standard/gateway.networking.k8s.io_referencegrants.yaml
#               - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/experimental/gateway.networking.k8s.io_grpcroutes.yaml
#               - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cilium
  namespace: argocd
spec:
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: cilium
    repoURL: https://helm.cilium.io/
    targetRevision: 1.15.0-pre.1
    helm:
      valuesObject:
        autoDirectNodeRoutes: true
        bpf:
          masquerade: true
        cluster:
          name: home-cluster
          id: 1
        containerRuntime:
          integration: containerd
          socketPath: /var/run/k3s/containerd/containerd.sock
        endpointRoutes:
          enabled: true
        externalIPs:
          enabled: true
        hubble:
          enabled: true
          metrics:
            enabled:
              - dns:query
              - drop
              - tcp
              - flow
              - port-distribution
              - icmp
              - http
          relay:
            enabled: true
            rollOutPods: true
          ui:
            enabled: true
            rollOutPods: true
            ingress:
              enabled: false
        ipam:
          mode: kubernetes
        ipv4NativeRoutingCIDR: "10.42.0.0/16"
        k8sServiceHost: "192.168.1.195"
        k8sServicePort: 6443
        kubeProxyReplacement: true
        kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256
        l2announcements:
          enabled: true
          # https://github.com/cilium/cilium/issues/26586
          leaseDuration: 120s
          leaseRenewDeadline: 60s
          leaseRetryPeriod: 1s
        loadBalancer:
          algorithm: maglev
          mode: dsr
        localRedirectPolicy: true
        operator:
          replicas: 1
          rollOutPods: true
        rollOutCiliumPods: true
        securityContext:
          privileged: true
        #routingMode: native
        tunnel: disabled
        #gatewayAPI:
        #  enabled: true
        #  secretsNamespace:
        #    create: false
        #    name: cilium-secrets
        # does not support multiple ingress controllers
        ## https://github.com/cilium/cilium/issues/26487
        ingressController:
          enabled: true
          loadbalancerMode: shared
          enforceHttps: false
          secretsNamespace:
            create: false
            name: cilium-secrets
          service:
            allocateLoadBalancerNodePorts: false
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: coredns
  namespace: argocd
spec:
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: coredns
    repoURL: https://coredns.github.io/helm
    targetRevision: 1.28.2
    helm:
      valuesObject:
        fullnameOverride: coredns
        replicaCount: 1
        k8sAppLabelOverride: kube-dns
        service:
          name: kube-dns
          clusterIP: "10.43.0.10"
        serviceAccount:
          create: true
        deployment:
          annotations:
            reloader.stakater.com/auto: "true"
        servers:
          - zones:
              - zone: .
                scheme: dns://
                use_tcp: true
            port: 53
            plugins:
              - name: log
              - name: errors
              - name: health
                configBlock: |-
                  lameduck 5s
              - name: ready
              - name: kubernetes
                parameters: cluster.local in-addr.arpa ip6.arpa
                configBlock: |-
                  pods insecure
                  fallthrough in-addr.arpa ip6.arpa
                  ttl 30
              - name: prometheus
                parameters: 0.0.0.0:9153
              - name: forward
                parameters: . /etc/resolv.conf
              - name: cache
                parameters: 30
              - name: loop
              - name: reload
              - name: loadbalance
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
        tolerations:
          - key: CriticalAddonsOnly
            operator: Exists
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
            effect: NoSchedule
          - key: node-role.kubernetes.io/master
            operator: Exists
            effect: NoSchedule
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: kubernetes.io/hostname
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: coredns
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: cilium.io/v2alpha1
kind: CiliumL2AnnouncementPolicy
metadata:
  name: policy
spec:
  loadBalancerIPs: true
---
apiVersion: cilium.io/v2alpha1
kind: CiliumLoadBalancerIPPool
metadata:
  name: pool
spec:
  cidrs:
    - cidr: <path:stringreplacesecret#ciliumipamcidr>
