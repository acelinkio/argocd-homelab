---
kind: Namespace
apiVersion: v1
metadata:
  name: monitoring
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sso
  namespace: monitoring
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: grafana_client_id
      remoteRef:
        key: sso
        property: grafana_client_id
    - secretKey: grafana_client_secret
      remoteRef:
        key: sso
        property: grafana_client_secret
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: grafana
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 7.3.8
    helm:
      valuesObject:
        adminUser: admin
        env:
          GF_SERVER_ROOT_URL: "https://grafana.<path:stringreplacesecret#domain>"
          GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
          GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
          GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
          GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.<path:stringreplacesecret#domain>/application/o/authorize/"
          GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.<path:stringreplacesecret#domain>/application/o/token/"
          GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.<path:stringreplacesecret#domain>/application/o/userinfo/"
          GF_AUTH_SIGNOUT_REDIRECT_URL: "https://auth.<path:stringreplacesecret#domain>/application/o/grafana/end-session/"
          GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'Grafana Admin') && 'Admin' || 'Viewer'"
        envValueFrom:
          GF_AUTH_GENERIC_OAUTH_CLIENT_ID:
            secretKeyRef:
              key: grafana_client_id
              name: sso
          GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET:
            secretKeyRef:
              key: grafana_client_secret
              name: sso
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: monitoring
spec:
  ingressClassName: ingress-nginx-internal
  rules:
    - host: grafana.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: grafana
  namespace: monitoring
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  hostnames:
  - "grafana.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: grafana
      port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: grafana.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intin.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "false"