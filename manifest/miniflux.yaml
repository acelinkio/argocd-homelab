---
kind: Namespace
apiVersion: v1
metadata:
  name: miniflux
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: miniflux-configsecrets
  namespace: miniflux
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: postgrespassword
      remoteRef:
        key: cluster-01.postgres.miniflux.owner
        property: password
    - secretKey: postgresuser
      remoteRef:
        key: cluster-01.postgres.miniflux.owner
        property: username
---
apiVersion: v1
kind: Service
metadata:
  name: miniflux
  namespace: miniflux
  labels:
    app.kubernetes.io/instance: miniflux
    app.kubernetes.io/name: miniflux
    app.kubernetes.io/service: miniflux
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: miniflux
    app.kubernetes.io/name: miniflux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniflux
  namespace: miniflux
  labels:
    app.kubernetes.io/instance: miniflux
    app.kubernetes.io/name: miniflux
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: miniflux
      app.kubernetes.io/instance: miniflux
  template:
    metadata:
      labels: 
        app.kubernetes.io/instance: miniflux
        app.kubernetes.io/name: miniflux
    spec:
      containers: 
        - env:
          - name: BASE_URL
            value: https://rss.<path:stringreplacesecret#domain>
          - name: CREATE_ADMIN
            value: "1"
          - name: LOG_DATE_TIME
            value: "1"
          - name: METRICS_ALLOWED_NETWORKS
            value: <path:stringreplacesecret#ciliumipamcidr>
          - name: METRICS_COLLECTOR
            value: "1"
          - name: OAUTH2_CLIENT_ID
            value: miniflux
          - name: OAUTH2_OIDC_DISCOVERY_ENDPOINT
            value: https://auth.devbu.io
          - name: OAUTH2_PROVIDER
            value: oidc
          - name: OAUTH2_REDIRECT_URL
            value: https://miniflux.devbu.io/oauth2/oidc/callback
          - name: OAUTH2_USER_CREATION
            value: "1"
          - name: POLLING_FREQUENCY
            value: "15"
          - name: POLLING_SCHEDULER
            value: entry_frequency
          - name: PORT
            value: "80"
          - name: RUN_MIGRATIONS
            value: "1"



          - name: miniflux_AUTH_LOCAL
            value: "false"
          - name: miniflux_DATABASE_TYPE
            value: postgres
          - name: miniflux_DATABASE_HOST
            value: cluster-01.postgres
          - name: miniflux_DATABASE_DATABASE
            value: miniflux
          - name: miniflux_DATABASE_SSLMODE
            value: require
          - name: miniflux_DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: postgresuser
                name: miniflux-configsecrets
          - name: miniflux_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgrespassword
                name: miniflux-configsecrets
          - name: miniflux_SERVICE_FRONTENDURL
            value: https://tasks.<path:stringreplacesecret#domain>/
          - name: miniflux_SERVICE_JWTSECRET
            valueFrom:
              secretKeyRef:
                name: miniflux-configsecrets
                key: jwtsecret
          image: miniflux/api:0.22.1
          name: main
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: miniflux
  namespace: miniflux
spec:
  ingressClassName: ingress-nginx-internal
  rules:
    - host: "rss.acelink.io"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: miniflux
                port:
                  number: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: miniflux
  namespace: miniflux
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  hostnames:
  - "rss.<path:stringreplacesecret#domain>"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: miniflux
      port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: miniflux
  namespace: miniflux
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: rss.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intin.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "false"