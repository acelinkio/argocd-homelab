---
kind: Namespace
apiVersion: v1
metadata:
  name: rabbitmq
---
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: cluster01
  namespace: rabbitmq
spec:
  replicas: 3
  persistence:
    storageClassName: longhorn
    storage: 2Gi
---
apiVersion: rabbitmq.com/v1beta1
kind: Vhost
metadata:
  name: cluster01-kyoo
  namespace: rabbitmq
spec:
  name: kyoo
  rabbitmqClusterReference:
    name: cluster01
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cluster01-kyoo-backend
  namespace: rabbitmq
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      data:
        _note: "Limitation of operator.  Needed for generating a secret with desired username."
        username: "kyoo-backend"
  data:
    - secretKey: blank
      remoteRef:
        key: blank
        property: blank
---
apiVersion: rabbitmq.com/v1beta1
kind: User
metadata:
  name: cluster01-kyoo-backend
  namespace: rabbitmq
spec:
  tags:
    - administrator
  rabbitmqClusterReference:
    name: cluster01
  importCredentialsSecret:
    name: cluster01-kyoo-backend
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: cluster01.kyoo-backend
  namespace: rabbitmq
spec:
  refreshInterval: "5m"
  secretStoreRefs:
    - name: 1password
      kind: ClusterSecretStore
  selector:
    secret:
      name: cluster01-kyoo-backend-user-credentials
  data:
    - match:
        secretKey: username
        remoteRef:
          remoteKey: rabbitmq.cluster01.kyoo-backend
          property: username
    - match:
        secretKey: password
        remoteRef:
          remoteKey: rabbitmq.cluster01.kyoo-backend
          property: password
---
apiVersion: rabbitmq.com/v1beta1
kind: Permission
metadata:
  name: cluster01-kyoo-backend-permission0
  namespace: rabbitmq
spec:
  vhost: "/"
  permissions:
    write: ".*"
    configure: ".*"
    read: ".*"
  userReference:
    name: cluster01-kyoo-backend
  rabbitmqClusterReference:
    name: cluster01
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cluster01-kyoo-matcher
  namespace: rabbitmq
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      data:
        _note: "Limitation of operator.  Needed for generating a secret with desired username."
        username: "kyoo-matcher"
  data:
    - secretKey: blank
      remoteRef:
        key: blank
        property: blank
---
apiVersion: rabbitmq.com/v1beta1
kind: User
metadata:
  name: cluster01-kyoo-matcher
  namespace: rabbitmq
spec:
  tags:
    - administrator
  rabbitmqClusterReference:
    name: cluster01
  importCredentialsSecret:
    name: cluster01-kyoo-matcher
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: cluster01.kyoo-matcher
  namespace: rabbitmq
spec:
  refreshInterval: "5m"
  secretStoreRefs:
    - name: 1password
      kind: ClusterSecretStore
  selector:
    secret:
      name: cluster01-kyoo-matcher-user-credentials
  data:
    - match:
        secretKey: username
        remoteRef:
          remoteKey: rabbitmq.cluster01.kyoo-matcher
          property: username
    - match:
        secretKey: password
        remoteRef:
          remoteKey: rabbitmq.cluster01.kyoo-matcher
          property: password
---
apiVersion: rabbitmq.com/v1beta1
kind: Permission
metadata:
  name: cluster01-kyoo-matcher-permission0
  namespace: rabbitmq
spec:
  vhost: "/"
  permissions:
    write: ".*"
    configure: ".*"
    read: ".*"
  userReference:
    name: cluster01-kyoo-matcher
  rabbitmqClusterReference:
    name: cluster01
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cluster01-kyoo-scanner
  namespace: rabbitmq
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      data:
        _note: "Limitation of operator.  Needed for generating a secret with desired username."
        username: "kyoo-scanner"
  data:
    - secretKey: blank
      remoteRef:
        key: blank
        property: blank
---
apiVersion: rabbitmq.com/v1beta1
kind: User
metadata:
  name: cluster01-kyoo-scanner
  namespace: rabbitmq
spec:
  tags:
    - administrator
  rabbitmqClusterReference:
    name: cluster01
  importCredentialsSecret:
    name: cluster01-kyoo-scanner
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: cluster01.kyoo-scanner
  namespace: rabbitmq
spec:
  refreshInterval: "5m"
  secretStoreRefs:
    - name: 1password
      kind: ClusterSecretStore
  selector:
    secret:
      name: cluster01-kyoo-scanner-user-credentials
  data:
    - match:
        secretKey: username
        remoteRef:
          remoteKey: rabbitmq.cluster01.kyoo-scanner
          property: username
    - match:
        secretKey: password
        remoteRef:
          remoteKey: rabbitmq.cluster01.kyoo-scanner
          property: password
---
apiVersion: rabbitmq.com/v1beta1
kind: Permission
metadata:
  name: cluster01-kyoo-scanner-permission0
  namespace: rabbitmq
spec:
  vhost: "/"
  permissions:
    write: ".*"
    configure: ".*"
    read: ".*"
  userReference:
    name: cluster01-kyoo-scanner
  rabbitmqClusterReference:
    name: cluster01
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cluster01-kyoo-autosync
  namespace: rabbitmq
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      data:
        _note: "Limitation of operator.  Needed for generating a secret with desired username."
        username: "kyoo-autosync"
  data:
    - secretKey: blank
      remoteRef:
        key: blank
        property: blank
---
apiVersion: rabbitmq.com/v1beta1
kind: User
metadata:
  name: cluster01-kyoo-autosync
  namespace: rabbitmq
spec:
  tags:
    - administrator
  rabbitmqClusterReference:
    name: cluster01
  importCredentialsSecret:
    name: cluster01-kyoo-autosync
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: cluster01.kyoo-autosync
  namespace: rabbitmq
spec:
  refreshInterval: "5m"
  secretStoreRefs:
    - name: 1password
      kind: ClusterSecretStore
  selector:
    secret:
      name: cluster01-kyoo-autosync-user-credentials
  data:
    - match:
        secretKey: username
        remoteRef:
          remoteKey: rabbitmq.cluster01.kyoo-autosync
          property: username
    - match:
        secretKey: password
        remoteRef:
          remoteKey: rabbitmq.cluster01.kyoo-autosync
          property: password
---
apiVersion: rabbitmq.com/v1beta1
kind: Permission
metadata:
  name: cluster01-kyoo-autosync-permission0
  namespace: rabbitmq
spec:
  vhost: "/"
  permissions:
    write: ".*"
    configure: ".*"
    read: ".*"
  userReference:
    name: cluster01-kyoo-autosync
  rabbitmqClusterReference:
    name: cluster01